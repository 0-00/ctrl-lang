Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> function
Rule 1     function -> function_declaration block ENDL
Rule 2     function_declaration -> identifier arguments TYPEDEF type_expression ENDL
Rule 3     arguments -> arguments arguments
Rule 4     arguments -> SPACE identifier
Rule 5     block -> block block
Rule 6     block -> TAB statement ENDL
Rule 7     statement -> identifier ASSIGNMENT expression
Rule 8     statement -> expression
Rule 9     type_expression -> type_expression CURRY type_expression
Rule 10    type_expression -> LPAREN type_expression RPAREN
Rule 11    type_expression -> identifier
Rule 12    expression -> expression ADD expression
Rule 13    expression -> expression SUB expression
Rule 14    expression -> expression MUL expression
Rule 15    expression -> expression DIV expression
Rule 16    expression -> LPAREN expression RPAREN
Rule 17    expression -> NUMBER
Rule 18    expression -> identifier
Rule 19    identifier -> WORD

Terminals, with rules where they appear

ADD                  : 12
ASSIGNMENT           : 7
CURRY                : 9
DIV                  : 15
ENDL                 : 1 2 6
LPAREN               : 10 16
MUL                  : 14
NUMBER               : 17
RPAREN               : 10 16
SPACE                : 4
SUB                  : 13
TAB                  : 6
TYPEDEF              : 2
WORD                 : 19
error                : 

Nonterminals, with rules where they appear

arguments            : 2 3 3
block                : 1 5 5
expression           : 7 8 12 12 13 13 14 14 15 15 16
function             : 0
function_declaration : 1
identifier           : 2 4 7 11 18
statement            : 6
type_expression      : 2 9 9 10

Parsing method: LALR

state 0

    (0) S' -> . function
    (1) function -> . function_declaration block ENDL
    (2) function_declaration -> . identifier arguments TYPEDEF type_expression ENDL
    (19) identifier -> . WORD

    WORD            shift and go to state 4

    function                       shift and go to state 1
    function_declaration           shift and go to state 2
    identifier                     shift and go to state 3

state 1

    (0) S' -> function .



state 2

    (1) function -> function_declaration . block ENDL
    (5) block -> . block block
    (6) block -> . TAB statement ENDL

    TAB             shift and go to state 6

    block                          shift and go to state 5

state 3

    (2) function_declaration -> identifier . arguments TYPEDEF type_expression ENDL
    (3) arguments -> . arguments arguments
    (4) arguments -> . SPACE identifier

    SPACE           shift and go to state 8

    arguments                      shift and go to state 7

state 4

    (19) identifier -> WORD .

    SPACE           reduce using rule 19 (identifier -> WORD .)
    ASSIGNMENT      reduce using rule 19 (identifier -> WORD .)
    ADD             reduce using rule 19 (identifier -> WORD .)
    SUB             reduce using rule 19 (identifier -> WORD .)
    MUL             reduce using rule 19 (identifier -> WORD .)
    DIV             reduce using rule 19 (identifier -> WORD .)
    ENDL            reduce using rule 19 (identifier -> WORD .)
    TYPEDEF         reduce using rule 19 (identifier -> WORD .)
    RPAREN          reduce using rule 19 (identifier -> WORD .)
    CURRY           reduce using rule 19 (identifier -> WORD .)


state 5

    (1) function -> function_declaration block . ENDL
    (5) block -> block . block
    (5) block -> . block block
    (6) block -> . TAB statement ENDL

    ENDL            shift and go to state 10
    TAB             shift and go to state 6

    block                          shift and go to state 9

state 6

    (6) block -> TAB . statement ENDL
    (7) statement -> . identifier ASSIGNMENT expression
    (8) statement -> . expression
    (19) identifier -> . WORD
    (12) expression -> . expression ADD expression
    (13) expression -> . expression SUB expression
    (14) expression -> . expression MUL expression
    (15) expression -> . expression DIV expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . NUMBER
    (18) expression -> . identifier

    WORD            shift and go to state 4
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 15

    statement                      shift and go to state 11
    identifier                     shift and go to state 12
    expression                     shift and go to state 13

state 7

    (2) function_declaration -> identifier arguments . TYPEDEF type_expression ENDL
    (3) arguments -> arguments . arguments
    (3) arguments -> . arguments arguments
    (4) arguments -> . SPACE identifier

    TYPEDEF         shift and go to state 17
    SPACE           shift and go to state 8

    arguments                      shift and go to state 16

state 8

    (4) arguments -> SPACE . identifier
    (19) identifier -> . WORD

    WORD            shift and go to state 4

    identifier                     shift and go to state 18

state 9

    (5) block -> block block .
    (5) block -> block . block
    (5) block -> . block block
    (6) block -> . TAB statement ENDL

  ! shift/reduce conflict for TAB resolved as shift
    ENDL            reduce using rule 5 (block -> block block .)
    TAB             shift and go to state 6

  ! TAB             [ reduce using rule 5 (block -> block block .) ]

    block                          shift and go to state 9

state 10

    (1) function -> function_declaration block ENDL .

    $end            reduce using rule 1 (function -> function_declaration block ENDL .)


state 11

    (6) block -> TAB statement . ENDL

    ENDL            shift and go to state 19


state 12

    (7) statement -> identifier . ASSIGNMENT expression
    (18) expression -> identifier .

    ASSIGNMENT      shift and go to state 20
    ADD             reduce using rule 18 (expression -> identifier .)
    SUB             reduce using rule 18 (expression -> identifier .)
    MUL             reduce using rule 18 (expression -> identifier .)
    DIV             reduce using rule 18 (expression -> identifier .)
    ENDL            reduce using rule 18 (expression -> identifier .)


state 13

    (8) statement -> expression .
    (12) expression -> expression . ADD expression
    (13) expression -> expression . SUB expression
    (14) expression -> expression . MUL expression
    (15) expression -> expression . DIV expression

    ENDL            reduce using rule 8 (statement -> expression .)
    ADD             shift and go to state 21
    SUB             shift and go to state 22
    MUL             shift and go to state 23
    DIV             shift and go to state 24


state 14

    (16) expression -> LPAREN . expression RPAREN
    (12) expression -> . expression ADD expression
    (13) expression -> . expression SUB expression
    (14) expression -> . expression MUL expression
    (15) expression -> . expression DIV expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . NUMBER
    (18) expression -> . identifier
    (19) identifier -> . WORD

    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 15
    WORD            shift and go to state 4

    expression                     shift and go to state 25
    identifier                     shift and go to state 26

state 15

    (17) expression -> NUMBER .

    ADD             reduce using rule 17 (expression -> NUMBER .)
    SUB             reduce using rule 17 (expression -> NUMBER .)
    MUL             reduce using rule 17 (expression -> NUMBER .)
    DIV             reduce using rule 17 (expression -> NUMBER .)
    ENDL            reduce using rule 17 (expression -> NUMBER .)
    RPAREN          reduce using rule 17 (expression -> NUMBER .)


state 16

    (3) arguments -> arguments arguments .
    (3) arguments -> arguments . arguments
    (3) arguments -> . arguments arguments
    (4) arguments -> . SPACE identifier

  ! shift/reduce conflict for SPACE resolved as shift
    TYPEDEF         reduce using rule 3 (arguments -> arguments arguments .)
    SPACE           shift and go to state 8

  ! SPACE           [ reduce using rule 3 (arguments -> arguments arguments .) ]

    arguments                      shift and go to state 16

state 17

    (2) function_declaration -> identifier arguments TYPEDEF . type_expression ENDL
    (9) type_expression -> . type_expression CURRY type_expression
    (10) type_expression -> . LPAREN type_expression RPAREN
    (11) type_expression -> . identifier
    (19) identifier -> . WORD

    LPAREN          shift and go to state 29
    WORD            shift and go to state 4

    identifier                     shift and go to state 27
    type_expression                shift and go to state 28

state 18

    (4) arguments -> SPACE identifier .

    TYPEDEF         reduce using rule 4 (arguments -> SPACE identifier .)
    SPACE           reduce using rule 4 (arguments -> SPACE identifier .)


state 19

    (6) block -> TAB statement ENDL .

    ENDL            reduce using rule 6 (block -> TAB statement ENDL .)
    TAB             reduce using rule 6 (block -> TAB statement ENDL .)


state 20

    (7) statement -> identifier ASSIGNMENT . expression
    (12) expression -> . expression ADD expression
    (13) expression -> . expression SUB expression
    (14) expression -> . expression MUL expression
    (15) expression -> . expression DIV expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . NUMBER
    (18) expression -> . identifier
    (19) identifier -> . WORD

    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 15
    WORD            shift and go to state 4

    identifier                     shift and go to state 26
    expression                     shift and go to state 30

state 21

    (12) expression -> expression ADD . expression
    (12) expression -> . expression ADD expression
    (13) expression -> . expression SUB expression
    (14) expression -> . expression MUL expression
    (15) expression -> . expression DIV expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . NUMBER
    (18) expression -> . identifier
    (19) identifier -> . WORD

    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 15
    WORD            shift and go to state 4

    expression                     shift and go to state 31
    identifier                     shift and go to state 26

state 22

    (13) expression -> expression SUB . expression
    (12) expression -> . expression ADD expression
    (13) expression -> . expression SUB expression
    (14) expression -> . expression MUL expression
    (15) expression -> . expression DIV expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . NUMBER
    (18) expression -> . identifier
    (19) identifier -> . WORD

    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 15
    WORD            shift and go to state 4

    expression                     shift and go to state 32
    identifier                     shift and go to state 26

state 23

    (14) expression -> expression MUL . expression
    (12) expression -> . expression ADD expression
    (13) expression -> . expression SUB expression
    (14) expression -> . expression MUL expression
    (15) expression -> . expression DIV expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . NUMBER
    (18) expression -> . identifier
    (19) identifier -> . WORD

    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 15
    WORD            shift and go to state 4

    expression                     shift and go to state 33
    identifier                     shift and go to state 26

state 24

    (15) expression -> expression DIV . expression
    (12) expression -> . expression ADD expression
    (13) expression -> . expression SUB expression
    (14) expression -> . expression MUL expression
    (15) expression -> . expression DIV expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . NUMBER
    (18) expression -> . identifier
    (19) identifier -> . WORD

    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 15
    WORD            shift and go to state 4

    expression                     shift and go to state 34
    identifier                     shift and go to state 26

state 25

    (16) expression -> LPAREN expression . RPAREN
    (12) expression -> expression . ADD expression
    (13) expression -> expression . SUB expression
    (14) expression -> expression . MUL expression
    (15) expression -> expression . DIV expression

    RPAREN          shift and go to state 35
    ADD             shift and go to state 21
    SUB             shift and go to state 22
    MUL             shift and go to state 23
    DIV             shift and go to state 24


state 26

    (18) expression -> identifier .

    RPAREN          reduce using rule 18 (expression -> identifier .)
    ADD             reduce using rule 18 (expression -> identifier .)
    SUB             reduce using rule 18 (expression -> identifier .)
    MUL             reduce using rule 18 (expression -> identifier .)
    DIV             reduce using rule 18 (expression -> identifier .)
    ENDL            reduce using rule 18 (expression -> identifier .)


state 27

    (11) type_expression -> identifier .

    ENDL            reduce using rule 11 (type_expression -> identifier .)
    CURRY           reduce using rule 11 (type_expression -> identifier .)
    RPAREN          reduce using rule 11 (type_expression -> identifier .)


state 28

    (2) function_declaration -> identifier arguments TYPEDEF type_expression . ENDL
    (9) type_expression -> type_expression . CURRY type_expression

    ENDL            shift and go to state 36
    CURRY           shift and go to state 37


state 29

    (10) type_expression -> LPAREN . type_expression RPAREN
    (9) type_expression -> . type_expression CURRY type_expression
    (10) type_expression -> . LPAREN type_expression RPAREN
    (11) type_expression -> . identifier
    (19) identifier -> . WORD

    LPAREN          shift and go to state 29
    WORD            shift and go to state 4

    type_expression                shift and go to state 38
    identifier                     shift and go to state 27

state 30

    (7) statement -> identifier ASSIGNMENT expression .
    (12) expression -> expression . ADD expression
    (13) expression -> expression . SUB expression
    (14) expression -> expression . MUL expression
    (15) expression -> expression . DIV expression

    ENDL            reduce using rule 7 (statement -> identifier ASSIGNMENT expression .)
    ADD             shift and go to state 21
    SUB             shift and go to state 22
    MUL             shift and go to state 23
    DIV             shift and go to state 24


state 31

    (12) expression -> expression ADD expression .
    (12) expression -> expression . ADD expression
    (13) expression -> expression . SUB expression
    (14) expression -> expression . MUL expression
    (15) expression -> expression . DIV expression

    ADD             reduce using rule 12 (expression -> expression ADD expression .)
    SUB             reduce using rule 12 (expression -> expression ADD expression .)
    ENDL            reduce using rule 12 (expression -> expression ADD expression .)
    RPAREN          reduce using rule 12 (expression -> expression ADD expression .)
    MUL             shift and go to state 23
    DIV             shift and go to state 24

  ! MUL             [ reduce using rule 12 (expression -> expression ADD expression .) ]
  ! DIV             [ reduce using rule 12 (expression -> expression ADD expression .) ]
  ! ADD             [ shift and go to state 21 ]
  ! SUB             [ shift and go to state 22 ]


state 32

    (13) expression -> expression SUB expression .
    (12) expression -> expression . ADD expression
    (13) expression -> expression . SUB expression
    (14) expression -> expression . MUL expression
    (15) expression -> expression . DIV expression

    ADD             reduce using rule 13 (expression -> expression SUB expression .)
    SUB             reduce using rule 13 (expression -> expression SUB expression .)
    ENDL            reduce using rule 13 (expression -> expression SUB expression .)
    RPAREN          reduce using rule 13 (expression -> expression SUB expression .)
    MUL             shift and go to state 23
    DIV             shift and go to state 24

  ! MUL             [ reduce using rule 13 (expression -> expression SUB expression .) ]
  ! DIV             [ reduce using rule 13 (expression -> expression SUB expression .) ]
  ! ADD             [ shift and go to state 21 ]
  ! SUB             [ shift and go to state 22 ]


state 33

    (14) expression -> expression MUL expression .
    (12) expression -> expression . ADD expression
    (13) expression -> expression . SUB expression
    (14) expression -> expression . MUL expression
    (15) expression -> expression . DIV expression

    ADD             reduce using rule 14 (expression -> expression MUL expression .)
    SUB             reduce using rule 14 (expression -> expression MUL expression .)
    MUL             reduce using rule 14 (expression -> expression MUL expression .)
    DIV             reduce using rule 14 (expression -> expression MUL expression .)
    ENDL            reduce using rule 14 (expression -> expression MUL expression .)
    RPAREN          reduce using rule 14 (expression -> expression MUL expression .)

  ! ADD             [ shift and go to state 21 ]
  ! SUB             [ shift and go to state 22 ]
  ! MUL             [ shift and go to state 23 ]
  ! DIV             [ shift and go to state 24 ]


state 34

    (15) expression -> expression DIV expression .
    (12) expression -> expression . ADD expression
    (13) expression -> expression . SUB expression
    (14) expression -> expression . MUL expression
    (15) expression -> expression . DIV expression

    ADD             reduce using rule 15 (expression -> expression DIV expression .)
    SUB             reduce using rule 15 (expression -> expression DIV expression .)
    MUL             reduce using rule 15 (expression -> expression DIV expression .)
    DIV             reduce using rule 15 (expression -> expression DIV expression .)
    ENDL            reduce using rule 15 (expression -> expression DIV expression .)
    RPAREN          reduce using rule 15 (expression -> expression DIV expression .)

  ! ADD             [ shift and go to state 21 ]
  ! SUB             [ shift and go to state 22 ]
  ! MUL             [ shift and go to state 23 ]
  ! DIV             [ shift and go to state 24 ]


state 35

    (16) expression -> LPAREN expression RPAREN .

    ADD             reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    SUB             reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    MUL             reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    ENDL            reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 16 (expression -> LPAREN expression RPAREN .)


state 36

    (2) function_declaration -> identifier arguments TYPEDEF type_expression ENDL .

    TAB             reduce using rule 2 (function_declaration -> identifier arguments TYPEDEF type_expression ENDL .)


state 37

    (9) type_expression -> type_expression CURRY . type_expression
    (9) type_expression -> . type_expression CURRY type_expression
    (10) type_expression -> . LPAREN type_expression RPAREN
    (11) type_expression -> . identifier
    (19) identifier -> . WORD

    LPAREN          shift and go to state 29
    WORD            shift and go to state 4

    type_expression                shift and go to state 39
    identifier                     shift and go to state 27

state 38

    (10) type_expression -> LPAREN type_expression . RPAREN
    (9) type_expression -> type_expression . CURRY type_expression

    RPAREN          shift and go to state 40
    CURRY           shift and go to state 37


state 39

    (9) type_expression -> type_expression CURRY type_expression .
    (9) type_expression -> type_expression . CURRY type_expression

  ! shift/reduce conflict for CURRY resolved as shift
    ENDL            reduce using rule 9 (type_expression -> type_expression CURRY type_expression .)
    RPAREN          reduce using rule 9 (type_expression -> type_expression CURRY type_expression .)
    CURRY           shift and go to state 37

  ! CURRY           [ reduce using rule 9 (type_expression -> type_expression CURRY type_expression .) ]


state 40

    (10) type_expression -> LPAREN type_expression RPAREN .

    ENDL            reduce using rule 10 (type_expression -> LPAREN type_expression RPAREN .)
    CURRY           reduce using rule 10 (type_expression -> LPAREN type_expression RPAREN .)
    RPAREN          reduce using rule 10 (type_expression -> LPAREN type_expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for TAB in state 9 resolved as shift
WARNING: shift/reduce conflict for SPACE in state 16 resolved as shift
WARNING: shift/reduce conflict for CURRY in state 39 resolved as shift
